

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Jun 26 14:04:49 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F26K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F26K22 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65 ;; Function _TMR0_DefaultInterruptHandler is unused but had its address taken
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0004C4                     __pidataCOMRAM:
    69                           	opt stack 0
    70                           
    71                           ;initializer for _buff
    72  0004C4  10                 	db	16
    73  0004C5  01                 	db	1
    74  0004C6  02                 	db	2
    75  0004C7  04                 	db	4
    76  0004C8  08                 	db	8
    77                           
    78                           ;initializer for _driver
    79  0004C9  10                 	db	16
    80  0004CA  01                 	db	1
    81  0004CB  02                 	db	2
    82  0004CC  04                 	db	4
    83  0004CD  08                 	db	8
    84                           
    85                           ;initializer for _dispdata
    86  0004CE  FA                 	db	250
    87  0004CF  22                 	db	34
    88  0004D0  BC                 	db	188
    89  0004D1  AE                 	db	174
    90  0004D2  01                 	db	1
    91  0000                     _ANSELA	set	3896
    92  0000                     _ANSELB	set	3897
    93  0000                     _ANSELC	set	3898
    94  0000                     _OSCCON	set	4051
    95  0000                     _T0CONbits	set	4053
    96  0000                     _T0CON	set	4053
    97  0000                     _TMR0L	set	4054
    98  0000                     _TMR0H	set	4055
    99  0000                     _INTCON2bits	set	4081
   100  0000                     _WPUB	set	3937
   101  0000                     _TRISC	set	3988
   102  0000                     _TRISB	set	3987
   103  0000                     _TRISA	set	3986
   104  0000                     _LATC	set	3979
   105  0000                     _LATB	set	3978
   106  0000                     _LATA	set	3977
   107  0000                     _INTCONbits	set	4082
   108  0000                     _RCONbits	set	4048
   109  0000                     _PLLRDY	set	32407
   110  0000                     _LATA5	set	31821
   111  0000                     _LATC1	set	31833
   112  0000                     _LATC0	set	31832
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0003E2                     __pcinit:
   118                           	opt stack 0
   119  0003E2                     start_initialization:
   120                           	opt stack 0
   121  0003E2                     __initialization:
   122                           	opt stack 0
   123                           
   124                           ; Initialize objects allocated to COMRAM (15 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126  0003E2  0EC4               	movlw	low __pidataCOMRAM
   127  0003E4  6EF6               	movwf	tblptrl,c
   128  0003E6  0E04               	movlw	high __pidataCOMRAM
   129  0003E8  6EF7               	movwf	tblptrh,c
   130  0003EA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131  0003EC  6EF8               	movwf	tblptru,c
   132  0003EE  EE00  F02B         	lfsr	0,__pdataCOMRAM
   133  0003F2  EE10 F00F          	lfsr	1,15
   134  0003F6                     copy_data0:
   135  0003F6  0009               	tblrd		*+
   136  0003F8  CFF5 FFEE          	movff	tablat,postinc0
   137  0003FC  50E5               	movf	postdec1,w,c
   138  0003FE  50E1               	movf	fsr1l,w,c
   139  000400  E1FA               	bnz	copy_data0
   140                           
   141                           ; Clear objects allocated to COMRAM (10 bytes)
   142  000402  EE00  F03A         	lfsr	0,__pbssCOMRAM
   143  000406  0E0A               	movlw	10
   144  000408                     clear_0:
   145  000408  6AEE               	clrf	postinc0,c
   146  00040A  06E8               	decf	wreg,f,c
   147  00040C  E1FD               	bnz	clear_0
   148  00040E                     end_of_initialization:
   149                           	opt stack 0
   150  00040E                     __end_of__initialization:
   151                           	opt stack 0
   152  00040E  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   153  000410  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   154  000412  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  000414  6EF8               	movwf	tblptru,c
   156  000416  0100               	movlb	0
   157  000418  EFD3  F001         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           wreg	equ	0xFE8
   164                           postdec1	equ	0xFE5
   165                           fsr1l	equ	0xFE1
   166                           
   167                           	psect	bssCOMRAM
   168  00003A                     __pbssCOMRAM:
   169                           	opt stack 0
   170  00003A                     _roletimer:
   171                           	opt stack 0
   172  00003A                     	ds	2
   173  00003C                     _timer0ReloadVal:
   174                           	opt stack 0
   175  00003C                     	ds	2
   176  00003E                     _index:
   177                           	opt stack 0
   178  00003E                     	ds	2
   179  000040                     _TMR0_InterruptHandler:
   180                           	opt stack 0
   181  000040                     	ds	2
   182  000042                     _sn_sayac:
   183                           	opt stack 0
   184  000042                     	ds	2
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	dataCOMRAM
   195  00002B                     __pdataCOMRAM:
   196                           	opt stack 0
   197  00002B                     _buff:
   198                           	opt stack 0
   199  00002B                     	ds	5
   200  000030                     _driver:
   201                           	opt stack 0
   202  000030                     	ds	5
   203  000035                     _dispdata:
   204                           	opt stack 0
   205  000035                     	ds	5
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           wreg	equ	0xFE8
   212                           postdec1	equ	0xFE5
   213                           fsr1l	equ	0xFE1
   214                           
   215                           	psect	cstackCOMRAM
   216  000001                     __pcstackCOMRAM:
   217                           	opt stack 0
   218  000001                     shiftch@ch:
   219                           	opt stack 0
   220  000001                     i2TMR0_WriteTimer@timerVal:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224  000001                     	ds	2
   225  000003                     shiftch@i:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x2
   229  000003                     	ds	2
   230  000005                     ??_TMR0_ISR:
   231                           
   232                           ; 1 bytes @ 0x4
   233  000005                     	ds	1
   234  000006                     ??_INTERRUPT_InterruptManager:
   235                           
   236                           ; 1 bytes @ 0x5
   237  000006                     	ds	18
   238  000018                     ?___awdiv:
   239                           	opt stack 0
   240  000018                     ?___awmod:
   241                           	opt stack 0
   242  000018                     TMR0_WriteTimer@timerVal:
   243                           	opt stack 0
   244  000018                     TMR0_SetInterruptHandler@InterruptHandler:
   245                           	opt stack 0
   246  000018                     ___awdiv@dividend:
   247                           	opt stack 0
   248  000018                     ___awmod@dividend:
   249                           	opt stack 0
   250                           
   251                           ; 2 bytes @ 0x17
   252  000018                     	ds	2
   253  00001A                     ??_TMR0_Initialize:
   254  00001A                     ___awdiv@divisor:
   255                           	opt stack 0
   256  00001A                     ___awmod@divisor:
   257                           	opt stack 0
   258                           
   259                           ; 2 bytes @ 0x19
   260  00001A                     	ds	2
   261  00001C                     ___awdiv@counter:
   262                           	opt stack 0
   263  00001C                     ___awmod@counter:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x1B
   267  00001C                     	ds	1
   268  00001D                     ___awdiv@sign:
   269                           	opt stack 0
   270  00001D                     ___awmod@sign:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x1C
   274  00001D                     	ds	1
   275  00001E                     ___awdiv@quotient:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x1D
   279  00001E                     	ds	2
   280  000020                     bcd@sayi:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x1F
   284  000020                     	ds	2
   285  000022                     ??_bcd:
   286                           
   287                           ; 1 bytes @ 0x21
   288  000022                     	ds	1
   289  000023                     bcd@n:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x22
   293  000023                     	ds	2
   294  000025                     bcd@a:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x24
   298  000025                     	ds	2
   299  000027                     bcd@i:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x26
   303  000027                     	ds	2
   304  000029                     ??_main:
   305                           
   306                           ; 1 bytes @ 0x28
   307  000029                     	ds	2
   308                           tblptru	equ	0xFF8
   309                           tblptrh	equ	0xFF7
   310                           tblptrl	equ	0xFF6
   311                           tablat	equ	0xFF5
   312                           postinc0	equ	0xFEE
   313                           wreg	equ	0xFE8
   314                           postdec1	equ	0xFE5
   315                           fsr1l	equ	0xFE1
   316                           
   317 ;;
   318 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   319 ;;
   320 ;; *************** function _main *****************
   321 ;; Defined at:
   322 ;;		line 173 in file "main.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;		None
   325 ;; Auto vars:     Size  Location     Type
   326 ;;		None
   327 ;; Return value:  Size  Location     Type
   328 ;;                  1    wreg      void 
   329 ;; Registers used:
   330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   331 ;; Tracked objects:
   332 ;;		On entry : 0/0
   333 ;;		On exit  : 0/0
   334 ;;		Unchanged: 0/0
   335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   340 ;;Total ram usage:        2 bytes
   341 ;; Hardware stack levels required when called:    6
   342 ;; This function calls:
   343 ;;		_SYSTEM_Initialize
   344 ;;		_TMR0_StartTimer
   345 ;;		_TMR0_WriteTimer
   346 ;;		_bcd
   347 ;; This function is called by:
   348 ;;		Startup code after reset
   349 ;; This function uses a non-reentrant model
   350 ;;
   351                           
   352                           	psect	text0
   353  0003A6                     __ptext0:
   354                           	opt stack 0
   355  0003A6                     _main:
   356                           	opt stack 25
   357                           
   358                           ;main.c: 176: SYSTEM_Initialize();
   359                           
   360                           ;incstack = 0
   361  0003A6  EC59  F002         	call	_SYSTEM_Initialize	;wreg free
   362                           
   363                           ;main.c: 178: TMR0_WriteTimer(0xfc17);
   364  0003AA  0EFC               	movlw	252
   365  0003AC  6E19               	movwf	TMR0_WriteTimer@timerVal+1,c
   366  0003AE  0E17               	movlw	23
   367  0003B0  6E18               	movwf	TMR0_WriteTimer@timerVal,c
   368  0003B2  EC6A  F002         	call	_TMR0_WriteTimer	;wreg free
   369                           
   370                           ;main.c: 179: TMR0_StartTimer();
   371  0003B6  EC7E  F002         	call	_TMR0_StartTimer	;wreg free
   372                           
   373                           ;main.c: 181: (INTCONbits.GIE = 1);
   374  0003BA  8EF2               	bsf	intcon,7,c	;volatile
   375  0003BC                     
   376                           ;main.c: 200: {
   377                           ;main.c: 202: bcd(sn_sayac);
   378  0003BC  C042  F020         	movff	_sn_sayac,bcd@sayi
   379  0003C0  C043  F021         	movff	_sn_sayac+1,bcd@sayi+1
   380  0003C4  EC56  F000         	call	_bcd	;wreg free
   381                           
   382                           ;main.c: 204: _delay((unsigned long)((200)*(64000000/4000.0)));
   383  0003C8  0E11               	movlw	17
   384  0003CA  6E2A               	movwf	(??_main+1)& (0+255),c
   385  0003CC  0E3C               	movlw	60
   386  0003CE  6E29               	movwf	??_main& (0+255),c
   387  0003D0  0ECB               	movlw	203
   388  0003D2                     u467:
   389  0003D2  2EE8               	decfsz	wreg,f,c
   390  0003D4  D7FE               	bra	u467
   391  0003D6  2E29               	decfsz	??_main& (0+255),f,c
   392  0003D8  D7FC               	bra	u467
   393  0003DA  2E2A               	decfsz	(??_main+1)& (0+255),f,c
   394  0003DC  D7FA               	bra	u467
   395  0003DE  F000               	nop	
   396  0003E0  D7ED               	goto	l183
   397  0003E2                     __end_of_main:
   398                           	opt stack 0
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           intcon	equ	0xFF2
   404                           postinc0	equ	0xFEE
   405                           wreg	equ	0xFE8
   406                           postdec1	equ	0xFE5
   407                           fsr1l	equ	0xFE1
   408                           
   409 ;; *************** function _bcd *****************
   410 ;; Defined at:
   411 ;;		line 54 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;  sayi            2   31[COMRAM] int 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  i               2   38[COMRAM] int 
   416 ;;  a               2   36[COMRAM] int 
   417 ;;  n               2   34[COMRAM] int 
   418 ;;  t               2    0        int 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   429 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   430 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   431 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   432 ;;Total ram usage:        9 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; Hardware stack levels required when called:    4
   435 ;; This function calls:
   436 ;;		___awdiv
   437 ;;		___awmod
   438 ;; This function is called by:
   439 ;;		_main
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           	psect	text1
   444  0000AC                     __ptext1:
   445                           	opt stack 0
   446  0000AC                     _bcd:
   447                           	opt stack 26
   448                           
   449                           ;main.c: 58: int a,n,t;
   450                           ;main.c: 59: int i;
   451                           ;main.c: 61: a=0;
   452                           
   453                           ;incstack = 0
   454  0000AC  0E00               	movlw	0
   455  0000AE  6E26               	movwf	bcd@a+1,c
   456  0000B0  0E00               	movlw	0
   457  0000B2  6E25               	movwf	bcd@a,c
   458                           
   459                           ;main.c: 62: while(sayi>=1)
   460  0000B4  D0AE               	goto	u420
   461  0000B6                     
   462                           ;main.c: 63: {
   463                           ;main.c: 64: n=sayi%10;
   464  0000B6  C020  F018         	movff	bcd@sayi,___awmod@dividend
   465  0000BA  C021  F019         	movff	bcd@sayi+1,___awmod@dividend+1
   466  0000BE  0E00               	movlw	0
   467  0000C0  6E1B               	movwf	___awmod@divisor+1,c
   468  0000C2  0E0A               	movlw	10
   469  0000C4  6E1A               	movwf	___awmod@divisor,c
   470  0000C6  EC9B  F001         	call	___awmod	;wreg free
   471  0000CA  C018  F023         	movff	?___awmod,bcd@n
   472  0000CE  C019  F024         	movff	?___awmod+1,bcd@n+1
   473                           
   474                           ;main.c: 65: sayi=sayi/10;
   475  0000D2  C020  F018         	movff	bcd@sayi,___awdiv@dividend
   476  0000D6  C021  F019         	movff	bcd@sayi+1,___awdiv@dividend+1
   477  0000DA  0E00               	movlw	0
   478  0000DC  6E1B               	movwf	___awdiv@divisor+1,c
   479  0000DE  0E0A               	movlw	10
   480  0000E0  6E1A               	movwf	___awdiv@divisor,c
   481  0000E2  EC59  F001         	call	___awdiv	;wreg free
   482  0000E6  C018  F020         	movff	?___awdiv,bcd@sayi
   483  0000EA  C019  F021         	movff	?___awdiv+1,bcd@sayi+1
   484                           
   485                           ;main.c: 66: dispdata[a]=n;
   486  0000EE  0E35               	movlw	low _dispdata
   487  0000F0  2425               	addwf	bcd@a,w,c
   488  0000F2  6ED9               	movwf	fsr2l,c
   489  0000F4  0E00               	movlw	high _dispdata
   490  0000F6  2026               	addwfc	bcd@a+1,w,c
   491  0000F8  6EDA               	movwf	fsr2h,c
   492  0000FA  C023  FFDF         	movff	bcd@n,indf2
   493                           
   494                           ;main.c: 67: a++;
   495  0000FE  4A25               	infsnz	bcd@a,f,c
   496  000100  2A26               	incf	bcd@a+1,f,c
   497                           
   498                           ;main.c: 69: for(i=0;i<a;i++)
   499  000102  0E00               	movlw	0
   500  000104  6E28               	movwf	bcd@i+1,c
   501  000106  0E00               	movlw	0
   502  000108  6E27               	movwf	bcd@i,c
   503  00010A  D079               	goto	l161
   504  00010C                     
   505                           ;main.c: 77: dispdata[i]=(32 + 2); break;
   506  00010C  0E35               	movlw	low _dispdata
   507  00010E  2427               	addwf	bcd@i,w,c
   508  000110  6ED9               	movwf	fsr2l,c
   509  000112  0E00               	movlw	high _dispdata
   510  000114  2028               	addwfc	bcd@i+1,w,c
   511  000116  6EDA               	movwf	fsr2h,c
   512  000118  0E22               	movlw	34
   513  00011A  D047               	goto	L10
   514  00011C                     
   515                           ;main.c: 79: dispdata[i]=(128 + 32 + 8 + 16 + 4); break;
   516  00011C  0E35               	movlw	low _dispdata
   517  00011E  2427               	addwf	bcd@i,w,c
   518  000120  6ED9               	movwf	fsr2l,c
   519  000122  0E00               	movlw	high _dispdata
   520  000124  2028               	addwfc	bcd@i+1,w,c
   521  000126  6EDA               	movwf	fsr2h,c
   522  000128  0EBC               	movlw	188
   523  00012A  D03F               	goto	L10
   524  00012C                     
   525                           ;main.c: 82: dispdata[i]=(128 + 32 + 2 + 8 + 4); break;
   526  00012C  0E35               	movlw	low _dispdata
   527  00012E  2427               	addwf	bcd@i,w,c
   528  000130  6ED9               	movwf	fsr2l,c
   529  000132  0E00               	movlw	high _dispdata
   530  000134  2028               	addwfc	bcd@i+1,w,c
   531  000136  6EDA               	movwf	fsr2h,c
   532  000138  0EAE               	movlw	174
   533  00013A  D037               	goto	L10
   534  00013C                     
   535                           ;main.c: 84: dispdata[i]=(32 + 2 + 64 + 4); break;
   536  00013C  0E35               	movlw	low _dispdata
   537  00013E  2427               	addwf	bcd@i,w,c
   538  000140  6ED9               	movwf	fsr2l,c
   539  000142  0E00               	movlw	high _dispdata
   540  000144  2028               	addwfc	bcd@i+1,w,c
   541  000146  6EDA               	movwf	fsr2h,c
   542  000148  0E66               	movlw	102
   543  00014A  D02F               	goto	L10
   544  00014C                     
   545                           ;main.c: 87: dispdata[i]=(128 + 2 + 8 + 64 + 4); break;
   546  00014C  0E35               	movlw	low _dispdata
   547  00014E  2427               	addwf	bcd@i,w,c
   548  000150  6ED9               	movwf	fsr2l,c
   549  000152  0E00               	movlw	high _dispdata
   550  000154  2028               	addwfc	bcd@i+1,w,c
   551  000156  6EDA               	movwf	fsr2h,c
   552  000158  0ECE               	movlw	206
   553  00015A  D027               	goto	L10
   554  00015C                     
   555                           ;main.c: 89: dispdata[i]=(128 + 2 + 8 + 16 + 64 + 4); break;
   556  00015C  0E35               	movlw	low _dispdata
   557  00015E  2427               	addwf	bcd@i,w,c
   558  000160  6ED9               	movwf	fsr2l,c
   559  000162  0E00               	movlw	high _dispdata
   560  000164  2028               	addwfc	bcd@i+1,w,c
   561  000166  6EDA               	movwf	fsr2h,c
   562  000168  0EDE               	movlw	222
   563  00016A  D01F               	goto	L10
   564  00016C                     
   565                           ;main.c: 92: dispdata[i]=(128 + 32 + 2); break;
   566  00016C  0E35               	movlw	low _dispdata
   567  00016E  2427               	addwf	bcd@i,w,c
   568  000170  6ED9               	movwf	fsr2l,c
   569  000172  0E00               	movlw	high _dispdata
   570  000174  2028               	addwfc	bcd@i+1,w,c
   571  000176  6EDA               	movwf	fsr2h,c
   572  000178  0EA2               	movlw	162
   573  00017A  D017               	goto	L10
   574  00017C                     
   575                           ;main.c: 94: dispdata[i]=(128 + 32 + 2 + 8 + 16 + 64 + 4) ; break;
   576  00017C  0E35               	movlw	low _dispdata
   577  00017E  2427               	addwf	bcd@i,w,c
   578  000180  6ED9               	movwf	fsr2l,c
   579  000182  0E00               	movlw	high _dispdata
   580  000184  2028               	addwfc	bcd@i+1,w,c
   581  000186  6EDA               	movwf	fsr2h,c
   582  000188  0EFE               	movlw	254
   583  00018A  D00F               	goto	L10
   584  00018C                     
   585                           ;main.c: 96: dispdata[i]=(128 + 32 + 2 + 8 + 64 + 4); break;
   586  00018C  0E35               	movlw	low _dispdata
   587  00018E  2427               	addwf	bcd@i,w,c
   588  000190  6ED9               	movwf	fsr2l,c
   589  000192  0E00               	movlw	high _dispdata
   590  000194  2028               	addwfc	bcd@i+1,w,c
   591  000196  6EDA               	movwf	fsr2h,c
   592  000198  0EEE               	movlw	238
   593  00019A  D007               	goto	L10
   594  00019C                     
   595                           ;main.c: 98: dispdata[i]=(128 + 32 + 2 + 8 + 16 + 64); break;
   596  00019C  0E35               	movlw	low _dispdata
   597  00019E  2427               	addwf	bcd@i,w,c
   598  0001A0  6ED9               	movwf	fsr2l,c
   599  0001A2  0E00               	movlw	high _dispdata
   600  0001A4  2028               	addwfc	bcd@i+1,w,c
   601  0001A6  6EDA               	movwf	fsr2h,c
   602  0001A8  0EFA               	movlw	250
   603  0001AA                     L10:
   604  0001AA  6EDF               	movwf	indf2,c
   605                           
   606                           ;main.c: 99: }
   607  0001AC  D026               	goto	l165
   608  0001AE  0E35               	movlw	low _dispdata
   609  0001B0  2427               	addwf	bcd@i,w,c
   610  0001B2  6ED9               	movwf	fsr2l,c
   611  0001B4  0E00               	movlw	high _dispdata
   612  0001B6  2028               	addwfc	bcd@i+1,w,c
   613  0001B8  6EDA               	movwf	fsr2h,c
   614  0001BA  50DF               	movf	indf2,w,c
   615                           
   616                           ; Switch size 1, requested type "space"
   617                           ; Number of cases is 10, Range of values is 0 to 9
   618                           ; switch strategies available:
   619                           ; Name         Instructions Cycles
   620                           ; simple_byte           31    16 (average)
   621                           ;	Chosen strategy is simple_byte
   622  0001BC  0A00               	xorlw	0	; case 0
   623  0001BE  B4D8               	btfsc	status,2,c
   624  0001C0  D7ED               	goto	l175
   625  0001C2  0A01               	xorlw	1	; case 1
   626  0001C4  B4D8               	btfsc	status,2,c
   627  0001C6  D7A2               	goto	l166
   628  0001C8  0A03               	xorlw	3	; case 2
   629  0001CA  B4D8               	btfsc	status,2,c
   630  0001CC  D7A7               	goto	l167
   631  0001CE  0A01               	xorlw	1	; case 3
   632  0001D0  B4D8               	btfsc	status,2,c
   633  0001D2  D7AC               	goto	l168
   634  0001D4  0A07               	xorlw	7	; case 4
   635  0001D6  B4D8               	btfsc	status,2,c
   636  0001D8  D7B1               	goto	l169
   637  0001DA  0A01               	xorlw	1	; case 5
   638  0001DC  B4D8               	btfsc	status,2,c
   639  0001DE  D7B6               	goto	l170
   640  0001E0  0A03               	xorlw	3	; case 6
   641  0001E2  B4D8               	btfsc	status,2,c
   642  0001E4  D7BB               	goto	l171
   643  0001E6  0A01               	xorlw	1	; case 7
   644  0001E8  B4D8               	btfsc	status,2,c
   645  0001EA  D7C0               	goto	l172
   646  0001EC  0A0F               	xorlw	15	; case 8
   647  0001EE  B4D8               	btfsc	status,2,c
   648  0001F0  D7C5               	goto	l173
   649  0001F2  0A01               	xorlw	1	; case 9
   650  0001F4  B4D8               	btfsc	status,2,c
   651  0001F6  D7CA               	goto	l174
   652  0001F8  D7D1               	goto	l175
   653  0001FA                     l165:
   654  0001FA  4A27               	infsnz	bcd@i,f,c
   655  0001FC  2A28               	incf	bcd@i+1,f,c
   656  0001FE                     l161:
   657  0001FE  5025               	movf	bcd@a,w,c
   658  000200  5C27               	subwf	bcd@i,w,c
   659  000202  5028               	movf	bcd@i+1,w,c
   660  000204  0A80               	xorlw	128
   661  000206  6E22               	movwf	??_bcd& (0+255),c
   662  000208  5026               	movf	bcd@a+1,w,c
   663  00020A  0A80               	xorlw	128
   664  00020C  5822               	subwfb	??_bcd& (0+255),w,c
   665  00020E  A0D8               	btfss	status,0,c
   666  000210  D7CE               	goto	l163
   667  000212                     u420:
   668  000212  BE21               	btfsc	bcd@sayi+1,7,c
   669  000214  0012               	return	
   670  000216  5021               	movf	bcd@sayi+1,w,c
   671  000218  E103               	bnz	u431
   672  00021A  0420               	decf	bcd@sayi,w,c
   673  00021C  A0D8               	btfss	status,0,c
   674  00021E  0012               	return	
   675  000220                     u431:
   676  000220  D74A               	goto	l160
   677  000222                     __end_of_bcd:
   678                           	opt stack 0
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           intcon	equ	0xFF2
   684                           postinc0	equ	0xFEE
   685                           wreg	equ	0xFE8
   686                           postdec1	equ	0xFE5
   687                           fsr1l	equ	0xFE1
   688                           indf2	equ	0xFDF
   689                           fsr2h	equ	0xFDA
   690                           fsr2l	equ	0xFD9
   691                           status	equ	0xFD8
   692                           
   693 ;; *************** function ___awmod *****************
   694 ;; Defined at:
   695 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;  dividend        2   23[COMRAM] int 
   698 ;;  divisor         2   25[COMRAM] int 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  sign            1   28[COMRAM] unsigned char 
   701 ;;  counter         1   27[COMRAM] unsigned char 
   702 ;; Return value:  Size  Location     Type
   703 ;;                  2   23[COMRAM] int 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   714 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   715 ;;Total ram usage:        6 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    3
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_bcd
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text2
   726  000336                     __ptext2:
   727                           	opt stack 0
   728  000336                     ___awmod:
   729                           	opt stack 26
   730                           
   731                           ;incstack = 0
   732  000336  0E00               	movlw	0
   733  000338  6E1D               	movwf	___awmod@sign,c
   734  00033A  AE19               	btfss	___awmod@dividend+1,7,c
   735  00033C  D006               	goto	l367
   736  00033E  6C18               	negf	___awmod@dividend,c
   737  000340  1E19               	comf	___awmod@dividend+1,f,c
   738  000342  B0D8               	btfsc	status,0,c
   739  000344  2A19               	incf	___awmod@dividend+1,f,c
   740  000346  0E01               	movlw	1
   741  000348  6E1D               	movwf	___awmod@sign,c
   742  00034A                     l367:
   743  00034A  AE1B               	btfss	___awmod@divisor+1,7,c
   744  00034C  D004               	goto	l368
   745  00034E  6C1A               	negf	___awmod@divisor,c
   746  000350  1E1B               	comf	___awmod@divisor+1,f,c
   747  000352  B0D8               	btfsc	status,0,c
   748  000354  2A1B               	incf	___awmod@divisor+1,f,c
   749  000356                     l368:
   750  000356  501A               	movf	___awmod@divisor,w,c
   751  000358  101B               	iorwf	___awmod@divisor+1,w,c
   752  00035A  B4D8               	btfsc	status,2,c
   753  00035C  D018               	goto	l375
   754  00035E  0E01               	movlw	1
   755  000360  6E1C               	movwf	___awmod@counter,c
   756  000362  D004               	goto	l370
   757  000364  90D8               	bcf	status,0,c
   758  000366  361A               	rlcf	___awmod@divisor,f,c
   759  000368  361B               	rlcf	___awmod@divisor+1,f,c
   760  00036A  2A1C               	incf	___awmod@counter,f,c
   761  00036C                     l370:
   762  00036C  AE1B               	btfss	___awmod@divisor+1,7,c
   763  00036E  D7FA               	goto	l371
   764  000370                     u360:
   765  000370  501A               	movf	___awmod@divisor,w,c
   766  000372  5C18               	subwf	___awmod@dividend,w,c
   767  000374  501B               	movf	___awmod@divisor+1,w,c
   768  000376  5819               	subwfb	___awmod@dividend+1,w,c
   769  000378  A0D8               	btfss	status,0,c
   770  00037A  D004               	goto	l374
   771  00037C  501A               	movf	___awmod@divisor,w,c
   772  00037E  5E18               	subwf	___awmod@dividend,f,c
   773  000380  501B               	movf	___awmod@divisor+1,w,c
   774  000382  5A19               	subwfb	___awmod@dividend+1,f,c
   775  000384                     l374:
   776  000384  90D8               	bcf	status,0,c
   777  000386  321B               	rrcf	___awmod@divisor+1,f,c
   778  000388  321A               	rrcf	___awmod@divisor,f,c
   779  00038A  2E1C               	decfsz	___awmod@counter,f,c
   780  00038C  D7F1               	goto	u360
   781  00038E                     l375:
   782  00038E  501D               	movf	___awmod@sign,w,c
   783  000390  B4D8               	btfsc	status,2,c
   784  000392  D004               	goto	l376
   785  000394  6C18               	negf	___awmod@dividend,c
   786  000396  1E19               	comf	___awmod@dividend+1,f,c
   787  000398  B0D8               	btfsc	status,0,c
   788  00039A  2A19               	incf	___awmod@dividend+1,f,c
   789  00039C                     l376:
   790  00039C  C018  F018         	movff	___awmod@dividend,?___awmod
   791  0003A0  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
   792  0003A4  0012               	return	
   793  0003A6                     __end_of___awmod:
   794                           	opt stack 0
   795                           tblptru	equ	0xFF8
   796                           tblptrh	equ	0xFF7
   797                           tblptrl	equ	0xFF6
   798                           tablat	equ	0xFF5
   799                           intcon	equ	0xFF2
   800                           postinc0	equ	0xFEE
   801                           wreg	equ	0xFE8
   802                           postdec1	equ	0xFE5
   803                           fsr1l	equ	0xFE1
   804                           indf2	equ	0xFDF
   805                           fsr2h	equ	0xFDA
   806                           fsr2l	equ	0xFD9
   807                           status	equ	0xFD8
   808                           
   809 ;; *************** function ___awdiv *****************
   810 ;; Defined at:
   811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
   812 ;; Parameters:    Size  Location     Type
   813 ;;  dividend        2   23[COMRAM] int 
   814 ;;  divisor         2   25[COMRAM] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  quotient        2   29[COMRAM] int 
   817 ;;  sign            1   28[COMRAM] unsigned char 
   818 ;;  counter         1   27[COMRAM] unsigned char 
   819 ;; Return value:  Size  Location     Type
   820 ;;                  2   23[COMRAM] int 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    3
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_bcd
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text3
   843  0002B2                     __ptext3:
   844                           	opt stack 0
   845  0002B2                     ___awdiv:
   846                           	opt stack 26
   847                           
   848                           ;incstack = 0
   849  0002B2  0E00               	movlw	0
   850  0002B4  6E1D               	movwf	___awdiv@sign,c
   851  0002B6  AE1B               	btfss	___awdiv@divisor+1,7,c
   852  0002B8  D006               	goto	l354
   853  0002BA  6C1A               	negf	___awdiv@divisor,c
   854  0002BC  1E1B               	comf	___awdiv@divisor+1,f,c
   855  0002BE  B0D8               	btfsc	status,0,c
   856  0002C0  2A1B               	incf	___awdiv@divisor+1,f,c
   857  0002C2  0E01               	movlw	1
   858  0002C4  6E1D               	movwf	___awdiv@sign,c
   859  0002C6                     l354:
   860  0002C6  AE19               	btfss	___awdiv@dividend+1,7,c
   861  0002C8  D006               	goto	l355
   862  0002CA  6C18               	negf	___awdiv@dividend,c
   863  0002CC  1E19               	comf	___awdiv@dividend+1,f,c
   864  0002CE  B0D8               	btfsc	status,0,c
   865  0002D0  2A19               	incf	___awdiv@dividend+1,f,c
   866  0002D2  0E01               	movlw	1
   867  0002D4  1A1D               	xorwf	___awdiv@sign,f,c
   868  0002D6                     l355:
   869  0002D6  0E00               	movlw	0
   870  0002D8  6E1F               	movwf	___awdiv@quotient+1,c
   871  0002DA  0E00               	movlw	0
   872  0002DC  6E1E               	movwf	___awdiv@quotient,c
   873  0002DE  501A               	movf	___awdiv@divisor,w,c
   874  0002E0  101B               	iorwf	___awdiv@divisor+1,w,c
   875  0002E2  B4D8               	btfsc	status,2,c
   876  0002E4  D01C               	goto	l362
   877  0002E6  0E01               	movlw	1
   878  0002E8  6E1C               	movwf	___awdiv@counter,c
   879  0002EA  D004               	goto	l357
   880  0002EC  90D8               	bcf	status,0,c
   881  0002EE  361A               	rlcf	___awdiv@divisor,f,c
   882  0002F0  361B               	rlcf	___awdiv@divisor+1,f,c
   883  0002F2  2A1C               	incf	___awdiv@counter,f,c
   884  0002F4                     l357:
   885  0002F4  AE1B               	btfss	___awdiv@divisor+1,7,c
   886  0002F6  D7FA               	goto	l358
   887  0002F8                     u300:
   888  0002F8  90D8               	bcf	status,0,c
   889  0002FA  361E               	rlcf	___awdiv@quotient,f,c
   890  0002FC  361F               	rlcf	___awdiv@quotient+1,f,c
   891  0002FE  501A               	movf	___awdiv@divisor,w,c
   892  000300  5C18               	subwf	___awdiv@dividend,w,c
   893  000302  501B               	movf	___awdiv@divisor+1,w,c
   894  000304  5819               	subwfb	___awdiv@dividend+1,w,c
   895  000306  A0D8               	btfss	status,0,c
   896  000308  D005               	goto	l361
   897  00030A  501A               	movf	___awdiv@divisor,w,c
   898  00030C  5E18               	subwf	___awdiv@dividend,f,c
   899  00030E  501B               	movf	___awdiv@divisor+1,w,c
   900  000310  5A19               	subwfb	___awdiv@dividend+1,f,c
   901  000312  801E               	bsf	___awdiv@quotient,0,c
   902  000314                     l361:
   903  000314  90D8               	bcf	status,0,c
   904  000316  321B               	rrcf	___awdiv@divisor+1,f,c
   905  000318  321A               	rrcf	___awdiv@divisor,f,c
   906  00031A  2E1C               	decfsz	___awdiv@counter,f,c
   907  00031C  D7ED               	goto	u300
   908  00031E                     l362:
   909  00031E  501D               	movf	___awdiv@sign,w,c
   910  000320  B4D8               	btfsc	status,2,c
   911  000322  D004               	goto	l363
   912  000324  6C1E               	negf	___awdiv@quotient,c
   913  000326  1E1F               	comf	___awdiv@quotient+1,f,c
   914  000328  B0D8               	btfsc	status,0,c
   915  00032A  2A1F               	incf	___awdiv@quotient+1,f,c
   916  00032C                     l363:
   917  00032C  C01E  F018         	movff	___awdiv@quotient,?___awdiv
   918  000330  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
   919  000334  0012               	return	
   920  000336                     __end_of___awdiv:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           intcon	equ	0xFF2
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           indf2	equ	0xFDF
   932                           fsr2h	equ	0xFDA
   933                           fsr2l	equ	0xFD9
   934                           status	equ	0xFD8
   935                           
   936 ;; *************** function _TMR0_WriteTimer *****************
   937 ;; Defined at:
   938 ;;		line 148 in file "mcc_generated_files/tmr0.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  timerVal        2   23[COMRAM] unsigned int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;Total ram usage:        2 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_main
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           	psect	text4
   967  0004D4                     __ptext4:
   968                           	opt stack 0
   969  0004D4                     _TMR0_WriteTimer:
   970                           	opt stack 27
   971                           
   972                           ;tmr0.c: 151: TMR0H = timerVal >> 8;
   973                           
   974                           ;incstack = 0
   975  0004D4  5019               	movf	TMR0_WriteTimer@timerVal+1,w,c
   976  0004D6  6ED7               	movwf	4055,c	;volatile
   977                           
   978                           ;tmr0.c: 152: TMR0L = (uint8_t) timerVal;
   979  0004D8  C018  FFD6         	movff	TMR0_WriteTimer@timerVal,4054	;volatile
   980  0004DC  0012               	return		;funcret
   981  0004DE                     __end_of_TMR0_WriteTimer:
   982                           	opt stack 0
   983                           tblptru	equ	0xFF8
   984                           tblptrh	equ	0xFF7
   985                           tblptrl	equ	0xFF6
   986                           tablat	equ	0xFF5
   987                           intcon	equ	0xFF2
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           postdec1	equ	0xFE5
   991                           fsr1l	equ	0xFE1
   992                           indf2	equ	0xFDF
   993                           fsr2h	equ	0xFDA
   994                           fsr2l	equ	0xFD9
   995                           status	equ	0xFD8
   996                           
   997 ;; *************** function _TMR0_StartTimer *****************
   998 ;; Defined at:
   999 ;;		line 123 in file "mcc_generated_files/tmr0.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		None
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;Total ram usage:        0 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; Hardware stack levels required when called:    3
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text5
  1028  0004FC                     __ptext5:
  1029                           	opt stack 0
  1030  0004FC                     _TMR0_StartTimer:
  1031                           	opt stack 27
  1032                           
  1033                           ;tmr0.c: 126: T0CONbits.TMR0ON = 1;
  1034                           
  1035                           ;incstack = 0
  1036  0004FC  8ED5               	bsf	4053,7,c	;volatile
  1037  0004FE  0012               	return		;funcret
  1038  000500                     __end_of_TMR0_StartTimer:
  1039                           	opt stack 0
  1040                           tblptru	equ	0xFF8
  1041                           tblptrh	equ	0xFF7
  1042                           tblptrl	equ	0xFF6
  1043                           tablat	equ	0xFF5
  1044                           intcon	equ	0xFF2
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec1	equ	0xFE5
  1048                           fsr1l	equ	0xFE1
  1049                           indf2	equ	0xFDF
  1050                           fsr2h	equ	0xFDA
  1051                           fsr2l	equ	0xFD9
  1052                           status	equ	0xFD8
  1053                           
  1054 ;; *************** function _SYSTEM_Initialize *****************
  1055 ;; Defined at:
  1056 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;		None
  1061 ;; Return value:  Size  Location     Type
  1062 ;;                  1    wreg      void 
  1063 ;; Registers used:
  1064 ;;		wreg, status,2, status,0, cstack
  1065 ;; Tracked objects:
  1066 ;;		On entry : 0/0
  1067 ;;		On exit  : 0/0
  1068 ;;		Unchanged: 0/0
  1069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1073 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1074 ;;Total ram usage:        0 bytes
  1075 ;; Hardware stack levels used:    1
  1076 ;; Hardware stack levels required when called:    5
  1077 ;; This function calls:
  1078 ;;		_INTERRUPT_Initialize
  1079 ;;		_OSCILLATOR_Initialize
  1080 ;;		_PIN_MANAGER_Initialize
  1081 ;;		_TMR0_Initialize
  1082 ;; This function is called by:
  1083 ;;		_main
  1084 ;; This function uses a non-reentrant model
  1085 ;;
  1086                           
  1087                           	psect	text6
  1088  0004B2                     __ptext6:
  1089                           	opt stack 0
  1090  0004B2                     _SYSTEM_Initialize:
  1091                           	opt stack 25
  1092                           
  1093                           ;mcc.c: 53: INTERRUPT_Initialize();
  1094                           
  1095                           ;incstack = 0
  1096  0004B2  EC80  F002         	call	_INTERRUPT_Initialize	;wreg free
  1097                           
  1098                           ;mcc.c: 54: PIN_MANAGER_Initialize();
  1099  0004B6  EC43  F002         	call	_PIN_MANAGER_Initialize	;wreg free
  1100                           
  1101                           ;mcc.c: 55: OSCILLATOR_Initialize();
  1102  0004BA  EC74  F002         	call	_OSCILLATOR_Initialize	;wreg free
  1103                           
  1104                           ;mcc.c: 56: TMR0_Initialize();
  1105  0004BE  EC29  F002         	call	_TMR0_Initialize	;wreg free
  1106  0004C2  0012               	return		;funcret
  1107  0004C4                     __end_of_SYSTEM_Initialize:
  1108                           	opt stack 0
  1109                           tblptru	equ	0xFF8
  1110                           tblptrh	equ	0xFF7
  1111                           tblptrl	equ	0xFF6
  1112                           tablat	equ	0xFF5
  1113                           intcon	equ	0xFF2
  1114                           postinc0	equ	0xFEE
  1115                           wreg	equ	0xFE8
  1116                           postdec1	equ	0xFE5
  1117                           fsr1l	equ	0xFE1
  1118                           indf2	equ	0xFDF
  1119                           fsr2h	equ	0xFDA
  1120                           fsr2l	equ	0xFD9
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _TMR0_Initialize *****************
  1124 ;; Defined at:
  1125 ;;		line 93 in file "mcc_generated_files/tmr0.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    4
  1146 ;; This function calls:
  1147 ;;		_TMR0_SetInterruptHandler
  1148 ;; This function is called by:
  1149 ;;		_SYSTEM_Initialize
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           	psect	text7
  1154  000452                     __ptext7:
  1155                           	opt stack 0
  1156  000452                     _TMR0_Initialize:
  1157                           	opt stack 25
  1158                           
  1159                           ;tmr0.c: 101: TMR0H = 0xf0;
  1160                           
  1161                           ;incstack = 0
  1162  000452  0EF0               	movlw	240
  1163  000454  6ED7               	movwf	4055,c	;volatile
  1164                           
  1165                           ;tmr0.c: 104: TMR0L = 0x5f;
  1166  000456  0E5F               	movlw	95
  1167  000458  6ED6               	movwf	4054,c	;volatile
  1168                           
  1169                           ;tmr0.c: 108: timer0ReloadVal = (uint16_t)((TMR0H << 8) | TMR0L);
  1170  00045A  50D6               	movf	4054,w,c	;volatile
  1171  00045C  CFD7 F01A          	movff	4055,??_TMR0_Initialize	;volatile
  1172  000460  6A1B               	clrf	(??_TMR0_Initialize+1)& (0+255),c
  1173  000462  C01A  F01B         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  1174  000466  6A1A               	clrf	??_TMR0_Initialize,c
  1175  000468  101A               	iorwf	??_TMR0_Initialize,w,c
  1176  00046A  6E3C               	movwf	_timer0ReloadVal,c	;volatile
  1177  00046C  501B               	movf	??_TMR0_Initialize+1,w,c
  1178  00046E  6E3D               	movwf	_timer0ReloadVal+1,c	;volatile
  1179                           
  1180                           ;tmr0.c: 111: INTCONbits.TMR0IF = 0;
  1181  000470  94F2               	bcf	intcon,2,c	;volatile
  1182                           
  1183                           ;tmr0.c: 114: INTCONbits.TMR0IE = 1;
  1184  000472  8AF2               	bsf	intcon,5,c	;volatile
  1185                           
  1186                           ;tmr0.c: 117: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
  1187  000474  0E00               	movlw	0
  1188  000476  6E18               	movwf	TMR0_SetInterruptHandler@InterruptHandler,c
  1189  000478  0E00               	movlw	0
  1190  00047A  6E19               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1,c
  1191  00047C  EC6F  F002         	call	_TMR0_SetInterruptHandler	;wreg free
  1192                           
  1193                           ;tmr0.c: 120: T0CON = 0x81;
  1194  000480  0E81               	movlw	129
  1195  000482  6ED5               	movwf	4053,c	;volatile
  1196  000484  0012               	return		;funcret
  1197  000486                     __end_of_TMR0_Initialize:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           intcon	equ	0xFF2
  1204                           postinc0	equ	0xFEE
  1205                           wreg	equ	0xFE8
  1206                           postdec1	equ	0xFE5
  1207                           fsr1l	equ	0xFE1
  1208                           indf2	equ	0xFDF
  1209                           fsr2h	equ	0xFDA
  1210                           fsr2l	equ	0xFD9
  1211                           status	equ	0xFD8
  1212                           
  1213 ;; *************** function _TMR0_SetInterruptHandler *****************
  1214 ;; Defined at:
  1215 ;;		line 203 in file "mcc_generated_files/tmr0.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;  InterruptHan    2   23[COMRAM] PTR FTN()void 
  1218 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;Total ram usage:        2 bytes
  1235 ;; Hardware stack levels used:    1
  1236 ;; Hardware stack levels required when called:    3
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_TMR0_Initialize
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text8
  1245  0004DE                     __ptext8:
  1246                           	opt stack 0
  1247  0004DE                     _TMR0_SetInterruptHandler:
  1248                           	opt stack 25
  1249                           
  1250                           ;tmr0.c: 204: TMR0_InterruptHandler = InterruptHandler;
  1251                           
  1252                           ;incstack = 0
  1253  0004DE  C018  F040         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  1254  0004E2  C019  F041         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  1255  0004E6  0012               	return		;funcret
  1256  0004E8                     __end_of_TMR0_SetInterruptHandler:
  1257                           	opt stack 0
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           intcon	equ	0xFF2
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _PIN_MANAGER_Initialize *****************
  1273 ;; Defined at:
  1274 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:        0 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    3
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_SYSTEM_Initialize
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text9
  1303  000486                     __ptext9:
  1304                           	opt stack 0
  1305  000486                     _PIN_MANAGER_Initialize:
  1306                           	opt stack 26
  1307                           
  1308                           ;pin_manager.c: 62: LATA = 0x00;
  1309                           
  1310                           ;incstack = 0
  1311  000486  0E00               	movlw	0
  1312  000488  6E89               	movwf	3977,c	;volatile
  1313                           
  1314                           ;pin_manager.c: 63: LATB = 0x00;
  1315  00048A  0E00               	movlw	0
  1316  00048C  6E8A               	movwf	3978,c	;volatile
  1317                           
  1318                           ;pin_manager.c: 64: LATC = 0x00;
  1319  00048E  0E00               	movlw	0
  1320  000490  6E8B               	movwf	3979,c	;volatile
  1321                           
  1322                           ;pin_manager.c: 69: TRISA = 0x03;
  1323  000492  0E03               	movlw	3
  1324  000494  6E92               	movwf	3986,c	;volatile
  1325                           
  1326                           ;pin_manager.c: 70: TRISB = 0x38;
  1327  000496  0E38               	movlw	56
  1328  000498  6E93               	movwf	3987,c	;volatile
  1329                           
  1330                           ;pin_manager.c: 71: TRISC = 0xC0;
  1331  00049A  0EC0               	movlw	192
  1332  00049C  6E94               	movwf	3988,c	;volatile
  1333                           
  1334                           ;pin_manager.c: 76: ANSELC = 0x00;
  1335  00049E  0E00               	movlw	0
  1336  0004A0  010F               	movlb	15	; () banked
  1337  0004A2  6F3A               	movwf	58,b	;volatile
  1338                           
  1339                           ;pin_manager.c: 77: ANSELB = 0x00;
  1340  0004A4  0E00               	movlw	0
  1341  0004A6  6F39               	movwf	57,b	;volatile
  1342                           
  1343                           ;pin_manager.c: 78: ANSELA = 0x00;
  1344  0004A8  0E00               	movlw	0
  1345  0004AA  6F38               	movwf	56,b	;volatile
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;pin_manager.c: 83: WPUB = 0xFF;
  1349  0004AC  6861               	setf	3937,c	;volatile
  1350                           
  1351                           ; BSR set to: 15
  1352                           ;pin_manager.c: 84: INTCON2bits.nRBPU = 1;
  1353  0004AE  8EF1               	bsf	intcon2,7,c	;volatile
  1354                           
  1355                           ; BSR set to: 15
  1356  0004B0  0012               	return		;funcret
  1357  0004B2                     __end_of_PIN_MANAGER_Initialize:
  1358                           	opt stack 0
  1359                           tblptru	equ	0xFF8
  1360                           tblptrh	equ	0xFF7
  1361                           tblptrl	equ	0xFF6
  1362                           tablat	equ	0xFF5
  1363                           intcon	equ	0xFF2
  1364                           intcon2	equ	0xFF1
  1365                           postinc0	equ	0xFEE
  1366                           wreg	equ	0xFE8
  1367                           postdec1	equ	0xFE5
  1368                           fsr1l	equ	0xFE1
  1369                           indf2	equ	0xFDF
  1370                           fsr2h	equ	0xFDA
  1371                           fsr2l	equ	0xFD9
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _OSCILLATOR_Initialize *****************
  1375 ;; Defined at:
  1376 ;;		line 59 in file "mcc_generated_files/mcc.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    3
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_SYSTEM_Initialize
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text10
  1405  0004E8                     __ptext10:
  1406                           	opt stack 0
  1407  0004E8                     _OSCILLATOR_Initialize:
  1408                           	opt stack 26
  1409                           
  1410                           ;mcc.c: 62: OSCCON = 0x38;
  1411                           
  1412                           ; BSR set to: 15
  1413                           ;incstack = 0
  1414  0004E8  0E38               	movlw	56
  1415  0004EA  6ED3               	movwf	4051,c	;volatile
  1416  0004EC                     
  1417                           ;mcc.c: 69: {
  1418  0004EC  BED2               	btfsc	4050,7,c	;volatile
  1419  0004EE  0012               	return	
  1420  0004F0  D7FD               	goto	l136
  1421  0004F2                     __end_of_OSCILLATOR_Initialize:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           intcon	equ	0xFF2
  1428                           intcon2	equ	0xFF1
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1l	equ	0xFE1
  1433                           indf2	equ	0xFDF
  1434                           fsr2h	equ	0xFDA
  1435                           fsr2l	equ	0xFD9
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _INTERRUPT_Initialize *****************
  1439 ;; Defined at:
  1440 ;;		line 55 in file "mcc_generated_files/interrupt_manager.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		None
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    3
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_SYSTEM_Initialize
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text11
  1469  000500                     __ptext11:
  1470                           	opt stack 0
  1471  000500                     _INTERRUPT_Initialize:
  1472                           	opt stack 26
  1473                           
  1474                           ;interrupt_manager.c: 58: RCONbits.IPEN = 0;
  1475                           
  1476                           ;incstack = 0
  1477  000500  9ED0               	bcf	4048,7,c	;volatile
  1478  000502  0012               	return		;funcret
  1479  000504                     __end_of_INTERRUPT_Initialize:
  1480                           	opt stack 0
  1481                           tblptru	equ	0xFF8
  1482                           tblptrh	equ	0xFF7
  1483                           tblptrl	equ	0xFF6
  1484                           tablat	equ	0xFF5
  1485                           intcon	equ	0xFF2
  1486                           intcon2	equ	0xFF1
  1487                           postinc0	equ	0xFEE
  1488                           wreg	equ	0xFE8
  1489                           postdec1	equ	0xFE5
  1490                           fsr1l	equ	0xFE1
  1491                           indf2	equ	0xFDF
  1492                           fsr2h	equ	0xFDA
  1493                           fsr2l	equ	0xFD9
  1494                           status	equ	0xFD8
  1495                           
  1496 ;; *************** function _INTERRUPT_InterruptManager *****************
  1497 ;; Defined at:
  1498 ;;		line 61 in file "mcc_generated_files/interrupt_manager.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;		None
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;		None
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1516 ;;Total ram usage:       18 bytes
  1517 ;; Hardware stack levels used:    1
  1518 ;; Hardware stack levels required when called:    2
  1519 ;; This function calls:
  1520 ;;		_TMR0_ISR
  1521 ;; This function is called by:
  1522 ;;		Interrupt level 2
  1523 ;; This function uses a non-reentrant model
  1524 ;;
  1525                           
  1526                           	psect	intcode
  1527  000008                     __pintcode:
  1528                           	opt stack 0
  1529  000008                     _INTERRUPT_InterruptManager:
  1530                           	opt stack 25
  1531                           
  1532                           ;incstack = 0
  1533  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1534  00000A  CFFA F006          	movff	pclath,??_INTERRUPT_InterruptManager
  1535  00000E  CFFB F007          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  1536  000012  CFE9 F008          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
  1537  000016  CFEA F009          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
  1538  00001A  CFE1 F00A          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
  1539  00001E  CFE2 F00B          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
  1540  000022  CFD9 F00C          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
  1541  000026  CFDA F00D          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
  1542  00002A  CFF3 F00E          	movff	prodl,??_INTERRUPT_InterruptManager+8
  1543  00002E  CFF4 F00F          	movff	prodh,??_INTERRUPT_InterruptManager+9
  1544  000032  CFF6 F010          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
  1545  000036  CFF7 F011          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
  1546  00003A  CFF8 F012          	movff	tblptru,??_INTERRUPT_InterruptManager+12
  1547  00003E  CFF5 F013          	movff	tablat,??_INTERRUPT_InterruptManager+13
  1548  000042  C044  F014         	movff	btemp,??_INTERRUPT_InterruptManager+14
  1549  000046  C045  F015         	movff	btemp+1,??_INTERRUPT_InterruptManager+15
  1550  00004A  C046  F016         	movff	btemp+2,??_INTERRUPT_InterruptManager+16
  1551  00004E  C047  F017         	movff	btemp+3,??_INTERRUPT_InterruptManager+17
  1552                           
  1553                           ;interrupt_manager.c: 64: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  1554  000052  BAF2               	btfsc	intcon,5,c	;volatile
  1555  000054  A4F2               	btfss	intcon,2,c	;volatile
  1556  000056  D002               	goto	i2l14
  1557                           
  1558                           ;interrupt_manager.c: 65: {
  1559                           ;interrupt_manager.c: 66: TMR0_ISR();
  1560  000058  EC11  F001         	call	_TMR0_ISR	;wreg free
  1561  00005C                     i2l14:
  1562                           
  1563                           ;interrupt_manager.c: 69: else
  1564                           ;interrupt_manager.c: 70: {
  1565  00005C  C017  F047         	movff	??_INTERRUPT_InterruptManager+17,btemp+3
  1566  000060  C016  F046         	movff	??_INTERRUPT_InterruptManager+16,btemp+2
  1567  000064  C015  F045         	movff	??_INTERRUPT_InterruptManager+15,btemp+1
  1568  000068  C014  F044         	movff	??_INTERRUPT_InterruptManager+14,btemp
  1569  00006C  C013  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
  1570  000070  C012  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
  1571  000074  C011  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
  1572  000078  C010  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
  1573  00007C  C00F  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
  1574  000080  C00E  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
  1575  000084  C00D  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
  1576  000088  C00C  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
  1577  00008C  C00B  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
  1578  000090  C00A  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
  1579  000094  C009  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
  1580  000098  C008  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
  1581  00009C  C007  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  1582  0000A0  C006  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  1583  0000A4  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1584  0000A6  0011               	retfie		f
  1585  0000A8                     __end_of_INTERRUPT_InterruptManager:
  1586                           	opt stack 0
  1587                           pclatu	equ	0xFFB
  1588                           pclath	equ	0xFFA
  1589                           tblptru	equ	0xFF8
  1590                           tblptrh	equ	0xFF7
  1591                           tblptrl	equ	0xFF6
  1592                           tablat	equ	0xFF5
  1593                           prodh	equ	0xFF4
  1594                           prodl	equ	0xFF3
  1595                           intcon	equ	0xFF2
  1596                           intcon2	equ	0xFF1
  1597                           postinc0	equ	0xFEE
  1598                           fsr0h	equ	0xFEA
  1599                           fsr0l	equ	0xFE9
  1600                           wreg	equ	0xFE8
  1601                           postdec1	equ	0xFE5
  1602                           fsr1h	equ	0xFE2
  1603                           fsr1l	equ	0xFE1
  1604                           indf2	equ	0xFDF
  1605                           fsr2h	equ	0xFDA
  1606                           fsr2l	equ	0xFD9
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _TMR0_ISR *****************
  1610 ;; Defined at:
  1611 ;;		line 162 in file "mcc_generated_files/tmr0.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;Total ram usage:        1 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    1
  1632 ;; This function calls:
  1633 ;;		_shiftch
  1634 ;;		i2_TMR0_WriteTimer
  1635 ;; This function is called by:
  1636 ;;		_INTERRUPT_InterruptManager
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text13
  1641  000222                     __ptext13:
  1642                           	opt stack 0
  1643  000222                     _TMR0_ISR:
  1644                           	opt stack 25
  1645                           
  1646                           ;tmr0.c: 166: INTCONbits.TMR0IF = 0;
  1647                           
  1648                           ;incstack = 0
  1649  000222  94F2               	bcf	intcon,2,c	;volatile
  1650                           
  1651                           ;tmr0.c: 172: TMR0_WriteTimer(0xfc17);
  1652  000224  0EFC               	movlw	252
  1653  000226  6E02               	movwf	i2TMR0_WriteTimer@timerVal+1,c
  1654  000228  0E17               	movlw	23
  1655  00022A  6E01               	movwf	i2TMR0_WriteTimer@timerVal,c
  1656  00022C  EC79  F002         	call	i2_TMR0_WriteTimer	;wreg free
  1657                           
  1658                           ;tmr0.c: 181: roletimer++;
  1659  000230  4A3A               	infsnz	_roletimer,f,c
  1660  000232  2A3B               	incf	_roletimer+1,f,c
  1661                           
  1662                           ;tmr0.c: 184: if(roletimer>=1000)
  1663  000234  0EE8               	movlw	232
  1664  000236  5C3A               	subwf	_roletimer,w,c
  1665  000238  0E03               	movlw	3
  1666  00023A  583B               	subwfb	_roletimer+1,w,c
  1667  00023C  A0D8               	btfss	status,0,c
  1668  00023E  D002               	goto	i2l108
  1669                           
  1670                           ;tmr0.c: 185: {
  1671                           ;tmr0.c: 186: sn_sayac++;
  1672  000240  4A42               	infsnz	_sn_sayac,f,c
  1673  000242  2A43               	incf	_sn_sayac+1,f,c
  1674  000244                     i2l108:
  1675                           
  1676                           ;tmr0.c: 187: }
  1677                           ;tmr0.c: 188: if(sn_sayac>=9999)
  1678  000244  BE43               	btfsc	_sn_sayac+1,7,c
  1679  000246  D00A               	goto	i2l109
  1680  000248  0E0F               	movlw	15
  1681  00024A  5C42               	subwf	_sn_sayac,w,c
  1682  00024C  0E27               	movlw	39
  1683  00024E  5843               	subwfb	_sn_sayac+1,w,c
  1684  000250  A0D8               	btfss	status,0,c
  1685  000252  D004               	goto	i2l109
  1686                           
  1687                           ;tmr0.c: 189: {
  1688                           ;tmr0.c: 190: sn_sayac=0;
  1689  000254  0E00               	movlw	0
  1690  000256  6E43               	movwf	_sn_sayac+1,c
  1691  000258  0E00               	movlw	0
  1692  00025A  6E42               	movwf	_sn_sayac,c
  1693  00025C                     i2l109:
  1694                           
  1695                           ;tmr0.c: 191: }
  1696                           ;tmr0.c: 192: LATA5=0;
  1697  00025C  9A89               	bcf	3977,5,c	;volatile
  1698                           
  1699                           ;tmr0.c: 193: shiftch(dispdata[index]);
  1700  00025E  0E35               	movlw	low _dispdata
  1701  000260  243E               	addwf	_index,w,c
  1702  000262  6ED9               	movwf	fsr2l,c
  1703  000264  0E00               	movlw	high _dispdata
  1704  000266  203F               	addwfc	_index+1,w,c
  1705  000268  6EDA               	movwf	fsr2h,c
  1706  00026A  50DF               	movf	indf2,w,c
  1707  00026C  6E05               	movwf	??_TMR0_ISR& (0+255),c
  1708  00026E  5005               	movf	??_TMR0_ISR,w,c
  1709  000270  6E01               	movwf	shiftch@ch,c
  1710  000272  6A02               	clrf	shiftch@ch+1,c
  1711  000274  EC0E  F002         	call	_shiftch	;wreg free
  1712                           
  1713                           ;tmr0.c: 194: shiftch(driver[index]);
  1714  000278  0E30               	movlw	low _driver
  1715  00027A  243E               	addwf	_index,w,c
  1716  00027C  6ED9               	movwf	fsr2l,c
  1717  00027E  0E00               	movlw	high _driver
  1718  000280  203F               	addwfc	_index+1,w,c
  1719  000282  6EDA               	movwf	fsr2h,c
  1720  000284  50DF               	movf	indf2,w,c
  1721  000286  6E05               	movwf	??_TMR0_ISR& (0+255),c
  1722  000288  5005               	movf	??_TMR0_ISR,w,c
  1723  00028A  6E01               	movwf	shiftch@ch,c
  1724  00028C  6A02               	clrf	shiftch@ch+1,c
  1725  00028E  EC0E  F002         	call	_shiftch	;wreg free
  1726                           
  1727                           ;tmr0.c: 196: LATA5=1;
  1728  000292  8A89               	bsf	3977,5,c	;volatile
  1729                           
  1730                           ;tmr0.c: 197: index++;
  1731  000294  4A3E               	infsnz	_index,f,c
  1732  000296  2A3F               	incf	_index+1,f,c
  1733                           
  1734                           ;tmr0.c: 198: if(index>3)
  1735  000298  BE3F               	btfsc	_index+1,7,c
  1736  00029A  0012               	return	
  1737  00029C  503F               	movf	_index+1,w,c
  1738  00029E  E104               	bnz	i2u41_40
  1739  0002A0  0E04               	movlw	4
  1740  0002A2  5C3E               	subwf	_index,w,c
  1741  0002A4  A0D8               	btfss	status,0,c
  1742  0002A6  0012               	return	
  1743  0002A8                     i2u41_40:
  1744                           
  1745                           ;tmr0.c: 199: index=0;
  1746  0002A8  0E00               	movlw	0
  1747  0002AA  6E3F               	movwf	_index+1,c
  1748  0002AC  0E00               	movlw	0
  1749  0002AE  6E3E               	movwf	_index,c
  1750  0002B0  0012               	return	
  1751  0002B2                     __end_of_TMR0_ISR:
  1752                           	opt stack 0
  1753                           pclatu	equ	0xFFB
  1754                           pclath	equ	0xFFA
  1755                           tblptru	equ	0xFF8
  1756                           tblptrh	equ	0xFF7
  1757                           tblptrl	equ	0xFF6
  1758                           tablat	equ	0xFF5
  1759                           prodh	equ	0xFF4
  1760                           prodl	equ	0xFF3
  1761                           intcon	equ	0xFF2
  1762                           intcon2	equ	0xFF1
  1763                           postinc0	equ	0xFEE
  1764                           fsr0h	equ	0xFEA
  1765                           fsr0l	equ	0xFE9
  1766                           wreg	equ	0xFE8
  1767                           postdec1	equ	0xFE5
  1768                           fsr1h	equ	0xFE2
  1769                           fsr1l	equ	0xFE1
  1770                           indf2	equ	0xFDF
  1771                           fsr2h	equ	0xFDA
  1772                           fsr2l	equ	0xFD9
  1773                           status	equ	0xFD8
  1774                           
  1775 ;; *************** function i2_TMR0_WriteTimer *****************
  1776 ;; Defined at:
  1777 ;;		line 148 in file "mcc_generated_files/tmr0.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  timerVal        2    0[COMRAM] unsigned int 
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:        2 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_TMR0_ISR
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text14
  1805  0004F2                     __ptext14:
  1806                           	opt stack 0
  1807  0004F2                     i2_TMR0_WriteTimer:
  1808                           	opt stack 25
  1809                           
  1810                           ;tmr0.c: 151: TMR0H = timerVal >> 8;
  1811                           
  1812                           ;incstack = 0
  1813  0004F2  5002               	movf	i2TMR0_WriteTimer@timerVal+1,w,c
  1814  0004F4  6ED7               	movwf	4055,c	;volatile
  1815                           
  1816                           ;tmr0.c: 152: TMR0L = (uint8_t) timerVal;
  1817  0004F6  C001  FFD6         	movff	i2TMR0_WriteTimer@timerVal,4054	;volatile
  1818  0004FA  0012               	return		;funcret
  1819  0004FC                     __end_ofi2_TMR0_WriteTimer:
  1820                           	opt stack 0
  1821                           pclatu	equ	0xFFB
  1822                           pclath	equ	0xFFA
  1823                           tblptru	equ	0xFF8
  1824                           tblptrh	equ	0xFF7
  1825                           tblptrl	equ	0xFF6
  1826                           tablat	equ	0xFF5
  1827                           prodh	equ	0xFF4
  1828                           prodl	equ	0xFF3
  1829                           intcon	equ	0xFF2
  1830                           intcon2	equ	0xFF1
  1831                           postinc0	equ	0xFEE
  1832                           fsr0h	equ	0xFEA
  1833                           fsr0l	equ	0xFE9
  1834                           wreg	equ	0xFE8
  1835                           postdec1	equ	0xFE5
  1836                           fsr1h	equ	0xFE2
  1837                           fsr1l	equ	0xFE1
  1838                           indf2	equ	0xFDF
  1839                           fsr2h	equ	0xFDA
  1840                           fsr2l	equ	0xFD9
  1841                           status	equ	0xFD8
  1842                           
  1843 ;; *************** function _shiftch *****************
  1844 ;; Defined at:
  1845 ;;		line 70 in file "mcc_generated_files/tmr0.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  ch              2    0[COMRAM] int 
  1848 ;; Auto vars:     Size  Location     Type
  1849 ;;  i               2    2[COMRAM] int 
  1850 ;; Return value:  Size  Location     Type
  1851 ;;                  1    wreg      void 
  1852 ;; Registers used:
  1853 ;;		wreg, status,2, status,0
  1854 ;; Tracked objects:
  1855 ;;		On entry : 0/0
  1856 ;;		On exit  : 0/0
  1857 ;;		Unchanged: 0/0
  1858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1859 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;Total ram usage:        4 bytes
  1864 ;; Hardware stack levels used:    1
  1865 ;; This function calls:
  1866 ;;		Nothing
  1867 ;; This function is called by:
  1868 ;;		_TMR0_ISR
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text15
  1873  00041C                     __ptext15:
  1874                           	opt stack 0
  1875  00041C                     _shiftch:
  1876                           	opt stack 25
  1877                           
  1878                           ;tmr0.c: 72: int i;
  1879                           ;tmr0.c: 73: LATC0=0;
  1880                           
  1881                           ;incstack = 0
  1882  00041C  908B               	bcf	3979,0,c	;volatile
  1883                           
  1884                           ;tmr0.c: 74: for(i=0;i<8;i++)
  1885  00041E  0E00               	movlw	0
  1886  000420  6E04               	movwf	shiftch@i+1,c
  1887  000422  0E00               	movlw	0
  1888  000424  6E03               	movwf	shiftch@i,c
  1889  000426                     i2l1052:
  1890  000426  BE04               	btfsc	shiftch@i+1,7,c
  1891  000428  D006               	goto	i2l83
  1892  00042A  5004               	movf	shiftch@i+1,w,c
  1893  00042C  E111               	bnz	i2l87
  1894  00042E  0E08               	movlw	8
  1895  000430  5C03               	subwf	shiftch@i,w,c
  1896  000432  B0D8               	btfsc	status,0,c
  1897  000434  0012               	return	
  1898  000436                     i2l83:
  1899                           
  1900                           ;tmr0.c: 75: {
  1901                           ;tmr0.c: 76: if (ch & 0X80)
  1902  000436  AE01               	btfss	shiftch@ch,7,c
  1903  000438  D002               	goto	i2l85
  1904                           
  1905                           ;tmr0.c: 77: {
  1906                           ;tmr0.c: 78: LATC1=1;
  1907  00043A  828B               	bsf	3979,1,c	;volatile
  1908                           
  1909                           ;tmr0.c: 79: }
  1910  00043C  D001               	goto	i2l86
  1911  00043E                     i2l85:
  1912                           
  1913                           ;tmr0.c: 81: else
  1914                           ;tmr0.c: 82: {
  1915                           ;tmr0.c: 83: LATC1=0;
  1916  00043E  928B               	bcf	3979,1,c	;volatile
  1917  000440                     i2l86:
  1918                           
  1919                           ;tmr0.c: 84: }
  1920                           ;tmr0.c: 86: LATC0=1;
  1921  000440  808B               	bsf	3979,0,c	;volatile
  1922                           
  1923                           ;tmr0.c: 88: LATC0=0;
  1924  000442  908B               	bcf	3979,0,c	;volatile
  1925                           
  1926                           ;tmr0.c: 89: ch<<=1;
  1927  000444  90D8               	bcf	status,0,c
  1928  000446  3601               	rlcf	shiftch@ch,f,c
  1929  000448  3602               	rlcf	shiftch@ch+1,f,c
  1930  00044A  4A03               	infsnz	shiftch@i,f,c
  1931  00044C  2A04               	incf	shiftch@i+1,f,c
  1932  00044E  D7EB               	goto	i2l1052
  1933  000450                     i2l87:
  1934  000450  0012               	return		;funcret
  1935  000452                     __end_of_shiftch:
  1936                           	opt stack 0
  1937  0000                     pclatu	equ	0xFFB
  1938                           pclath	equ	0xFFA
  1939                           tblptru	equ	0xFF8
  1940                           tblptrh	equ	0xFF7
  1941                           tblptrl	equ	0xFF6
  1942                           tablat	equ	0xFF5
  1943                           prodh	equ	0xFF4
  1944                           prodl	equ	0xFF3
  1945                           intcon	equ	0xFF2
  1946                           intcon2	equ	0xFF1
  1947                           postinc0	equ	0xFEE
  1948                           fsr0h	equ	0xFEA
  1949                           fsr0l	equ	0xFE9
  1950                           wreg	equ	0xFE8
  1951                           postdec1	equ	0xFE5
  1952                           fsr1h	equ	0xFE2
  1953                           fsr1l	equ	0xFE1
  1954                           indf2	equ	0xFDF
  1955                           fsr2h	equ	0xFDA
  1956                           fsr2l	equ	0xFD9
  1957                           status	equ	0xFD8
  1958                           pclatu	equ	0xFFB
  1959                           pclath	equ	0xFFA
  1960                           tblptru	equ	0xFF8
  1961                           tblptrh	equ	0xFF7
  1962                           tblptrl	equ	0xFF6
  1963                           tablat	equ	0xFF5
  1964                           prodh	equ	0xFF4
  1965                           prodl	equ	0xFF3
  1966                           intcon	equ	0xFF2
  1967                           intcon2	equ	0xFF1
  1968                           postinc0	equ	0xFEE
  1969                           fsr0h	equ	0xFEA
  1970                           fsr0l	equ	0xFE9
  1971                           wreg	equ	0xFE8
  1972                           postdec1	equ	0xFE5
  1973                           fsr1h	equ	0xFE2
  1974                           fsr1l	equ	0xFE1
  1975                           indf2	equ	0xFDF
  1976                           fsr2h	equ	0xFDA
  1977                           fsr2l	equ	0xFD9
  1978                           status	equ	0xFD8
  1979                           
  1980                           	psect	rparam
  1981  0000                     pclatu	equ	0xFFB
  1982                           pclath	equ	0xFFA
  1983                           tblptru	equ	0xFF8
  1984                           tblptrh	equ	0xFF7
  1985                           tblptrl	equ	0xFF6
  1986                           tablat	equ	0xFF5
  1987                           prodh	equ	0xFF4
  1988                           prodl	equ	0xFF3
  1989                           intcon	equ	0xFF2
  1990                           intcon2	equ	0xFF1
  1991                           postinc0	equ	0xFEE
  1992                           fsr0h	equ	0xFEA
  1993                           fsr0l	equ	0xFE9
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1h	equ	0xFE2
  1997                           fsr1l	equ	0xFE1
  1998                           indf2	equ	0xFDF
  1999                           fsr2h	equ	0xFDA
  2000                           fsr2l	equ	0xFD9
  2001                           status	equ	0xFD8
  2002                           
  2003                           	psect	temp
  2004  000044                     btemp:
  2005                           	opt stack 0
  2006  000044                     	ds	1
  2007  0000                     int$flags	set	btemp
  2008  0000                     wtemp6	set	btemp+1
  2009                           pclatu	equ	0xFFB
  2010                           pclath	equ	0xFFA
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           tblptrl	equ	0xFF6
  2014                           tablat	equ	0xFF5
  2015                           prodh	equ	0xFF4
  2016                           prodl	equ	0xFF3
  2017                           intcon	equ	0xFF2
  2018                           intcon2	equ	0xFF1
  2019                           postinc0	equ	0xFEE
  2020                           fsr0h	equ	0xFEA
  2021                           fsr0l	equ	0xFE9
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1h	equ	0xFE2
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        15
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     42      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_bcd
    _bcd->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_TMR0_ISR
    _TMR0_ISR->_shiftch

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1668
                                             40 COMRAM     2     2      0
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                    _TMR0_WriteTimer
                                _bcd
 ---------------------------------------------------------------------------------
 (1) _bcd                                                 11     9      2    1400
                                             31 COMRAM     9     7      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     452
                                             23 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _TMR0_WriteTimer                                      2     0      2     170
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0      98
                                             25 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2      98
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                          18    18      0     291
                                              5 COMRAM    18    18      0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             1     1      0     291
                                              4 COMRAM     1     1      0
                            _shiftch
                  i2_TMR0_WriteTimer
 ---------------------------------------------------------------------------------
 (6) i2_TMR0_WriteTimer                                    2     0      2      70
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _shiftch                                              4     2      2     221
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_StartTimer
   _TMR0_WriteTimer
   _bcd
     ___awdiv
     ___awmod

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _shiftch
     i2_TMR0_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2A      43       1       71.3%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      12        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Jun 26 14:04:49 2018

                            ___awdiv@sign 001D                           _timer0ReloadVal 003C  
                            __CFG_CP0$OFF 000000                              __CFG_CP1$OFF 000000  
                            __CFG_CP2$OFF 000000                              __CFG_CP3$OFF 000000  
                             __CFG_LVP$ON 000000                                       l136 04EC  
                                     l160 00B6                                       l161 01FE  
                                     l170 014C                                       l163 01AE  
                                     l171 015C                                       l172 016C  
                                     l165 01FA                                       l173 017C  
                                     l174 018C                                       l166 010C  
                                     l175 019C                                       l167 011C  
                                     l183 03BC                                       l168 012C  
                                     l361 0314                                       l169 013C  
                                     l362 031E                                       l354 02C6  
                                     l370 036C                                       l363 032C  
                                     l355 02D6                                       l371 0364  
                                     l357 02F4                                       l358 02EC  
                                     l374 0384                                       l375 038E  
                                     l367 034A                                       l376 039C  
                                     l368 0356                              __CFG_CPB$OFF 000000  
                                     u300 02F8                                       u420 0212  
                                     u431 0220                                       u360 0370  
                            __CFG_CPD$OFF 000000                                       u467 03D2  
                                     _bcd 00AC                              ___awmod@sign 001D  
                                     wreg 000FE8                                      ?_bcd 0020  
                                    _LATA 000F89                                      _LATB 000F8A  
                                    _LATC 000F8B                                      i2l14 005C  
                                    i2l83 0436                                      i2l85 043E  
                                    i2l86 0440                                      i2l87 0450  
                                    _WPUB 000F61                                      bcd@a 0025  
                                    bcd@i 0027                                      bcd@n 0023  
                                    _buff 002B                                      _main 03A6  
                         _TMR0_StartTimer 04FC                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 0044                             __CFG_BORV$190 000000  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00A8                             __CFG_IESO$OFF 000000  
                            ___param_bank 000000                                     ??_bcd 0022  
                 __end_of_TMR0_Initialize 0486            __size_of_OSCILLATOR_Initialize 000A  
           __end_of_OSCILLATOR_Initialize 04F2                                     ?_main 0001  
                         __end_of___awdiv 0336                           __end_of___awmod 03A6  
                                   _T0CON 000FD5                           ___awdiv@divisor 001A  
                                   _LATC0 007C58                                     _LATC1 007C59  
                                   _LATA5 007C4D                            __CFG_DEBUG$OFF 000000  
                                   i2l108 0244                                     i2l109 025C  
                         _TMR0_WriteTimer 04D4                           ___awdiv@counter 001C  
                                   _TMR0H 000FD7                                     _TMR0L 000FD6  
                                   _TRISA 000F92                                     _TRISB 000F93  
                                   _TRISC 000F94         __size_of_TMR0_SetInterruptHandler 000A  
                           __CFG_WRT0$OFF 000000                             __CFG_WRT1$OFF 000000  
                           __CFG_WRT2$OFF 000000                 ?_TMR0_SetInterruptHandler 0018  
                           __CFG_WRT3$OFF 000000                            __CFG_EBTR0$OFF 000000  
                          __CFG_FCMEN$OFF 000000                            __CFG_EBTR1$OFF 000000  
                          __CFG_EBTR2$OFF 000000                            __CFG_EBTR3$OFF 000000  
                        __end_of_TMR0_ISR 02B2                             __CFG_WRTB$OFF 000000  
                           __CFG_WRTC$OFF 000000                             __CFG_WRTD$OFF 000000  
                          __CFG_EBTRB$OFF 000000                                     _index 003E  
                      __CFG_MCLRE$EXTMCLR 000000                                     pclath 000FFA  
                         __end_of_shiftch 0452                                     tablat 000FF5  
                                   status 000FD8                                     wtemp6 0045  
                          __CFG_HFOFST$ON 000000                            __CFG_FOSC$HSHP 000000  
                          __CFG_PBADEN$ON 000000                           __initialization 03E2  
                            __end_of_main 03E2               ?_INTERRUPT_InterruptManager 0001  
                                  ??_main 0029                             __activetblptr 000002  
                          __CFG_PLLCFG$ON 000000                   __end_of_TMR0_StartTimer 0500  
                        ___awdiv@dividend 0018                                    _ANSELA 000F38  
                                  _ANSELB 000F39                                    _ANSELC 000F3A  
                                  i2l1052 0426                            __CFG_WDTEN$OFF 000000  
                                  _OSCCON 000FD3                                    _PLLRDY 007E97  
                          __CFG_XINST$OFF 000000                                 ??___awdiv 001C  
                          __CFG_STVREN$ON 000000                                 ??___awmod 001C  
                 __end_of_TMR0_WriteTimer 04DE                 i2TMR0_WriteTimer@timerVal 0001  
                                  _driver 0030                          ?_TMR0_Initialize 0001  
                                  clear_0 0408                          ___awdiv@quotient 001E  
                         ___awmod@divisor 001A                           ___awmod@counter 001C  
                            __pdataCOMRAM 002B                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                               ??_shiftch 0003  TMR0_SetInterruptHandler@InterruptHandler 0018  
           __size_of_INTERRUPT_Initialize 0004                         _SYSTEM_Initialize 04B2  
                              __accesstop 0060                   __end_of__initialization 040E  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 000001  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 001C  
                               ?_TMR0_ISR 0001                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 04C4                        __CFG_CCP2MX$PORTC1 000000  
        __end_of_TMR0_SetInterruptHandler 04E8                                ??_TMR0_ISR 0005  
                      __CFG_CCP3MX$PORTB5 000000                          ?_TMR0_WriteTimer 0018  
                                 i2u41_40 02A8                           __CFG_PWRTEN$OFF 000000  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 02B2                                   ___awmod 0336  
                                 bcd@sayi 0020                                   __pcinit 03E2  
                                 __ramtop 1000                                   __ptext0 03A6  
                                 __ptext1 00AC                                   __ptext2 0336  
                                 __ptext3 02B2                                   __ptext4 04D4  
                                 __ptext5 04FC                                   __ptext6 04B2  
                                 __ptext7 0452                                   __ptext8 04DE  
                                 __ptext9 0486                                 _T0CONbits 000FD5  
                   _OSCILLATOR_Initialize 04E8                              __size_of_bcd 0176  
                        ___awmod@dividend 0018                  ??_PIN_MANAGER_Initialize 0018  
                                 _shiftch 041C                __size_of_SYSTEM_Initialize 0012  
                    end_of_initialization 040E                             __Lmediumconst 0000  
                                 postdec1 000FE5                                   postinc0 000FEE  
                _TMR0_SetInterruptHandler 04DE              __end_of_INTERRUPT_Initialize 0504  
                           __pidataCOMRAM 04C4                         __size_of_TMR0_ISR 0090  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 03E2  
                __size_of_TMR0_Initialize 0034           __size_of_PIN_MANAGER_Initialize 002C  
                             __end_of_bcd 0222                               __pbssCOMRAM 003A  
                   _TMR0_InterruptHandler 0040                  __size_of_TMR0_StartTimer 0004  
                  _PIN_MANAGER_Initialize 0486                                 __pintcode 0008  
                                ?___awdiv 0018                                  ?___awmod 0018  
            ??_INTERRUPT_InterruptManager 0006                          __CFG_PRICLKEN$ON 000000  
                __size_of_TMR0_WriteTimer 000A                                  ?_shiftch 0001  
                    _INTERRUPT_Initialize 0500                         ??_TMR0_Initialize 001A  
     __size_of_INTERRUPT_InterruptManager 00A0                ??_TMR0_SetInterruptHandler 001A  
                                _RCONbits 000FD0                          __CFG_WDTPS$32768 000000  
                                _TMR0_ISR 0222                                 _roletimer 003A  
                       i2_TMR0_WriteTimer 04F2                        ?i2_TMR0_WriteTimer 0001  
                             _INTCON2bits 000FF1                                 copy_data0 03F6  
                   ?_INTERRUPT_Initialize 0001                       ??i2_TMR0_WriteTimer 0003  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __CFG_BOREN$SBORDIS 000000                         __CFG_P2BMX$PORTB5 000000  
                 ??_OSCILLATOR_Initialize 0018                         ??_TMR0_StartTimer 0018  
                        __size_of___awdiv 0084                          __size_of___awmod 0070  
               __end_ofi2_TMR0_WriteTimer 04FC                                  __ptext10 04E8  
                                __ptext11 0500                                  __ptext13 0222  
                                __ptext14 04F2                                  __ptext15 041C  
                        __size_of_shiftch 0036                                  _dispdata 0035  
                 TMR0_WriteTimer@timerVal 0018                         ??_TMR0_WriteTimer 001A  
                           __size_of_main 003C                                 shiftch@ch 0001  
            _TMR0_DefaultInterruptHandler 000000                                  _sn_sayac 0042  
                                int$flags 0044        __end_of_INTERRUPT_InterruptManager 00A8  
              _INTERRUPT_InterruptManager 0008                                _INTCONbits 000FF2  
                  ??_INTERRUPT_Initialize 0018                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001                                  shiftch@i 0003  
              __size_ofi2_TMR0_WriteTimer 000A                           _TMR0_Initialize 0452  
                       __CFG_T3CMX$PORTC0 000000            __end_of_PIN_MANAGER_Initialize 04B2  
